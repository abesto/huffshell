#!/usr/bin/env ruby

require 'huffshell'

cs = CommandSuggestor.new

# zshfiles = ['~/.zsh_history', '~/.zshhistory', '~/.zhistory']
zshfiles = []
bashfiles = ['~/.bashhistory', '~/.bash_history']
shfiles = ['~/.shistory']
hfiles = ['~/.history']

files = (zshfiles + bashfiles + shfiles + hfiles).flatten
history_files = files.map{|f| File.expand_path(f) }.select{|f| File.exist?(f) }

puts "Huffshell"
puts "============="
history_files.each do |history_filename|
  puts ["History found:", history_filename, File.size(history_filename).to_s].join(" ")
end

def oh_my_zsh_type?
  false
end

history_files.each do |history_filename|
  puts "Importing #{history_filename}"
  if oh_my_zsh_type?
    OhMyZshReader.new(history_filename).
      shell_commands.
      each{ |l| cs.add(l) }
  else
    File.new(history_filename, 'r').read.split("\n").each{ |l| cs.add(l) }
  end
end

puts cs.wordtree.root.line_count

puts ""
puts "============="
puts [cs.commands.size.to_s.green, "unique keywords"].join(" ")

puts ""
[250, 100, 50, 20, 10, 5, 2, 1].reverse.each do |count|
  puts [cs.wordtree.root.minimum(count).keys.size.to_s.green, "commands appear > #{count} times"].join(" ")
end

puts ""
puts "Most common commands:"

cs.wordtree.root.minimum(10).sort{|a, b| a[1].line_count <=> b[1].line_count }.reverse[0,10].each do |word, node|
  puts [node.word, node.line_count.to_s.green].join(" ")
end

cs.truncate!(30)

puts ""
puts "Command tree:"
puts cs.to_print
